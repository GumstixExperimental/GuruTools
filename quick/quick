#!/bin/bash
args=( "$@" )
cmds=( list spdf s qgc egl gc m2 gdup bbcl egl d wa dd sc)
g_egl_dir="$HOME/.local/"
boot_sd_list=(MLO zImage u-boot.img)
rootfs_sd_list=("gumstix-console-image-*.tar.bz2" "modules-*.tgz")
echo
echo

case $1 in
    list)
        echo Commands:
        echo =========
        for i in ${cmds[@]}; do
            echo $i
        done
        echo
        echo
        exit
        ;;



    spdf)
        echo "Ghostscript PDF compression"
        if [ $# -lt 3 ];
            then echo "Not enough arguments"
            exit
        fi
        gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dNOPAUSE -dQUIET -dBATCH -sOutputFile=$3 $2
        echo done
        exit
        ;;



    s)
        echo "Sublime text editor"
        n=$#
        for i in `seq 1 ${n}`; do
            subl ${args[$i]}
        done
        exit
        ;;



    qgc)
        echo "QGroundControl"
        echo
        echo
        $HOME/.local/share/qgroundcontrol/QGroundControl &
        exit
        ;;


    gc)
        echo "Geppetto Client"
        echo
        echo
        PWD=$HOME/git/geppetto-client
        $PWD/geppetto-client --update
        exit
        ;;



    m2)
        echo "Make 2-part SD card"
        echo
        echo
        sudo umount ${2}1
        sudo umount ${2}2
        sudo -H $HOME/.local/bin/mk2partsd $2
        ;;

    mn)
        echo "Make nfs-ready SD card"
        echo
        echo
        sudo umount ${2}1
        sudo umount ${2}2
        sudo -H $HOME/.local/bin/mknfssd $2
        ;;

    gdup)
        echo "gdrive upload $2"
        if [ $3 = "p" ];
            then echo "Public";
            parent=0B8lrAesohhgncEhQWFFwS1dVZFk
        else
            parent=0B8lrAesohhgnYnp4ZDNqWXRGVE0
        fi
        tag=$(gdrive list --query "'$parent' in parents" | grep $2 2>$1 | cut -d" " -f1)
        if [ ${#tag} -ge 1 ];
        then 
            echo "this is ${tag[0]}"
            gdrive update $tag $2
        else
            gdrive upload -p $parent $2
        fi
        exit
        exit
        ;;



    bbcl)
        echo "Gumstix BitBucket clone $2"
        echo
        echo
        repo=$2.git
        cd /home/$USER/git
        git clone git@bitbucket.org:gumstix/$repo
        exit
        ;;

    egl)
        echo "Eagle"
        if [[ $2 == BRD* ]] || [[ $2 == brd* ]];
        then
            end=${2:3}
            echo $end
            len="$((12-${#end}))"
            echo $len
            name="9"
            for (( i=1; i<len; i++));
            do
                name="$name""0"
                echo $name
                echo $run
            done
            name="$name$end"
            echo $name
            echo "Opening Geppetto board $2"
            echo
            echo
            ${g_egl_dir}/bin/eagle $HOME/.geppetto/repos/eagle-src/boards/$name/$name.brd
        elif [[ $2 == MOD* ]] || [[ $2 == mod* ]]
            then
            echo "Opening Geppetto module $2"
            echo
            echo
            eagle $HOME/.geppetto/repos/eagle-src/modules/${2^^}/${2^^}
        else
            eagle $2
        fi
        exit
        ;;
    d)
    	echo "Meld Diff"      
    	echo
    	echo
    	if [ $# -lt 3 ]; then
    		echo "Not enough arguments"
    		exit
    	fi
    	meld $2 $3
    	exit
    	;;
    wa)
        echo "Wacom Config"
        echo
        echo
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Pad pad" Button 8 "key +shift = -shift" 
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Pad pad" Button 9 "key -"
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Pad pad" Button 1 "key +ctrl z -ctrl"
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Pad pad" Button 3 "key +shift ctrl j -shift"
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Finger touch" Touch off
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Pen stylus" MapToOutput 1920x1080+1920+0
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Pen eraser" MapToOutput 1920x1080+1920+0
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Pen stylus" Rotate half
        xsetwacom --set "Wacom Bamboo 2FG 4x5 Pen eraser" Rotate half
        exit
        ;;
    dd)
        if [ $# -lt 3 ]; then
            echo "not enough parameters"
            exit
        fi
        size=$(ls -l --b=M  $2 | cut -d " " -f5)
        echo $size
        echo "DD $2 to $3.  Size = $size"
        sudo sh -c "dd if=$2 bs=4M | pv -s $size | dd of=$3 bs=4M iflag=fullblock"
        exit
        ;;
    sc)
        if [ $# -lt 2 ]; then
            echo "not enough parameters"
        fi
        if [ $# -gt 2 ]; then
            baud=$3
        else
            baud=115200
        fi
        echo "Connecting to /dev/ttyUSB$2 at $baud bps"
        screen /dev/ttyUSB$2 $baud
        exit
        ;;
    *)
        echo "Usage:  \$ $0 [cmd] <arg1, arg2...>" 
        qk list
        exit
        ;;
esac

